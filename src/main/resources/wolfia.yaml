# This file contains defaults of the configuration which are checked into the repository and shipped with the jar, but can be overriden by other profiles.
# Secrets do not belong here - instead they should go into a secrets profile configuraiton file (e.g. wolfia-secrets.yaml).

---
wolfia:
  debug: true   # Some things are different. Set to false to properly run the bot.

oauth2:
  base-redirect-url: "/"    # URL that should be redirected to after a successful authentication (usually the root).

server:
  port: 4567   # Port of Wolfia's API.
  servlet:
    application-display-name: Wolfia

spring:
  # Avoid warning at startup
  thymeleaf.check-template-location: false
  main:
    lazy-initialization: true
  output:
    ansi:
      enabled: always
  security:
    oauth2:
      client:
        registration:
          discord:
            client-authentication-method: none
            authorization-grant-type: authorization_code
            scope:
              - identify
              - guilds
            redirect-uri: "{baseUrl}/login/oauth2/code/discord"
            client-name: Log In With Discord
        provider:
          discord:
            authorization-uri: https://discord.com/api/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            # Spring Session assumes the principal name is unique, and indexes sessions by it for example.
            # The discord username is not unique though, and it can be changed anytime.
            # That is why we use the id here instead.
            user-name-attribute: id
  session:
    redis:
      flush-mode: immediate
      repository-type: indexed
    timeout: 365d
  data:
    redis:
      url: "redis://localhost:6389/0"
  datasource:
    # From the docker/dev/compose file
    url: "jdbc:postgresql://localhost:5442/wolfia?user=wolfia&password=wolfia"
    hikari:
      validation-timeout: 1_000
      connection-timeout: 1_000
      auto-commit: false
      data-source-properties:
        # allow postgres to cast strings (varchars) more freely to actual column types
        # source https://jdbc.postgresql.org/documentation/head/connect.html
        stringtype: "unspecified"
  jpa:
    open-in-view: false
    properties:
      hibernate:
        connection:
          provider_disables_autocommit: false

togglz:
  enabled: true
  feature-enums: space.npstr.wolfia.domain.FeatureFlag
  feature-manager-name: "default"
  console:
    enabled: true
    path: /api/togglz
    secured: true
    use-management-port: false

logging:
  file:
    name: ./logs/wolfia.log
  logback:
    rollingpolicy:
      max-history: 30
      max-file-size: 1GB

  level:
    root: INFO
    space.npstr: DEBUG
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG

sentry:
  dsn: ""
  logging.enabled: false
  in-app-includes:
    - "space.npstr"
    - "dev.capybaralabs"
  logging:
    minimum-event-level: warn

management:
  prometheus:
    metrics:
      export:
        enabled: true
  endpoint:
    health:
      access: read-only
      show-details: always
    prometheus:
      access: read-only
  endpoints:
    access:
      default: none
      max-permitted: read-only
    web:
      exposure:
        include:
          - health
          - prometheus
      base-path: /
      path-mapping:
        prometheus: metrics
